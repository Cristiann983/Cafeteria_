/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;

import entity.Insumo;
import entity.Persistencia;
import entity.Producto;
import entity.Receta;
import entity.Recetainsumo;
import entity.Tipocantidad;
import java.awt.Color;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.persistence.EntityManagerFactory;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import jpaController.InsumoJpaController;
import jpaController.ProductoJpaController;
import jpaController.RecetaJpaController;
import jpaController.RecetainsumoJpaController;
import jpaController.TipocantidadJpaController;

/**
 *
 * @author crist
 */
public class insumosReceta extends javax.swing.JPanel {

    private Persistencia persis;

    private Receta receta;
    private RecetaJpaController jpareceta;

    private Insumo insumo;
    private InsumoJpaController jpaInsumo;

    private Recetainsumo rInsumo;
    private RecetainsumoJpaController jpaRinsumo;

    private List<Insumo> insumos;
    private int idSeleccionado = -1; // verificar que este selccionado alguno

    /**
     * Creates new form agregarEmpleado
     */
    public insumosReceta() {
        initComponents();
        persis = new Persistencia();
        EntityManagerFactory emf = persis.getEmf();
        jpareceta = new RecetaJpaController(emf);
        jpaInsumo = new InsumoJpaController(emf);
        jpaRinsumo = new RecetainsumoJpaController(emf);
        // cargarInsumos();
        llenarComboReceta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCentro = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInsumos = new javax.swing.JTable();
        comboReceta = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        panerlSur = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        panelNorte = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        panelCentro.setBackground(new java.awt.Color(202, 167, 145));
        panelCentro.setForeground(new java.awt.Color(255, 255, 255));
        panelCentro.setPreferredSize(new java.awt.Dimension(359, 300));
        panelCentro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                panelCentroKeyTyped(evt);
            }
        });
        panelCentro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaInsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre ", "Descripcion", "Cantidad", "Unidad", "Precio"
            }
        ));
        tablaInsumos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaInsumosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaInsumos);

        panelCentro.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 630, 140));

        comboReceta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        panelCentro.add(comboReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 130, -1));

        jLabel8.setText("Receta");
        panelCentro.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 73, -1));

        panerlSur.setBackground(new java.awt.Color(132, 85, 83));
        panerlSur.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panerlSur.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, -1, -1));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        panerlSur.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, -1, -1));

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        panerlSur.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, -1, -1));

        panelNorte.setBackground(new java.awt.Color(202, 167, 145));

        jLabel5.setText("I N S U M O S   U T I L I Z A D O S   P O R  R E C E T A");
        panelNorte.add(jLabel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNorte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCentro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panerlSur, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelNorte, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelCentro, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(panerlSur, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void llenarComboReceta() {
        comboReceta.removeAllItems(); // Limpiar el combo

        List<Receta> recetas = jpareceta.findRecetaEntities();
        for (Receta receta : recetas) {
            comboReceta.addItem(receta.getDescripcion());
        }
    }

    private void limpiarCampos() {
        idSeleccionado = -1; // Reinicia el ID seleccionado si estás en modo edición
    }

    private void cargarInsumosPorReceta(int idReceta) {
        try {
            // Obtener todas las relaciones receta-insumo
            List<Recetainsumo> relaciones = jpaRinsumo.findRecetainsumoEntities();

            // Filtrar por receta
            List<Recetainsumo> relacionesFiltradas = new ArrayList<>();
            for (Recetainsumo ri : relaciones) {
                if (ri.getReceta().getIdReceta() == idReceta) {
                    relacionesFiltradas.add(ri);
                }
            }

            // Limpiar tabla
            DefaultTableModel model = (DefaultTableModel) tablaInsumos.getModel();
            model.setRowCount(0);

            // Cargar cada insumo relacionado
            for (Recetainsumo relacion : relacionesFiltradas) {
                Insumo insumo = relacion.getInsumo(); // insumo relacionado

                double cantidadTotalStock = insumo.getCantidad(); // cantidad en stock
                double precioTotalStock = insumo.getPrecioU().doubleValue();   // precio total del stock
                double cantidadUsada = relacion.getCantidad();    // cantidad usada en la receta

                double precioUnitario = cantidadTotalStock > 0 ? precioTotalStock / cantidadTotalStock : 0;
                double precioUsado = precioUnitario * cantidadUsada;

                model.addRow(new Object[]{
                    insumo.getIdInsumo(),
                    insumo.getNombre(),
                    insumo.getDescripcion(),
                    cantidadUsada,
                    insumo.getIdTipocantidad().getNombre(), // unidad
                    String.format("%.2f", precioUsado) // precio utilizado formateado
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar insumos de receta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String descripcionSeleccionada = (String) comboReceta.getSelectedItem();

        if (descripcionSeleccionada != null && !descripcionSeleccionada.isEmpty()) {
            for (Receta receta : jpareceta.findRecetaEntities()) {
                if (receta.getDescripcion().equalsIgnoreCase(descripcionSeleccionada)) {
                    cargarInsumosPorReceta(receta.getIdReceta());
                    return;
                }
            }
            JOptionPane.showMessageDialog(this, "No se encontró la receta seleccionada.");
        } else {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una receta.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void panelCentroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelCentroKeyTyped

    }//GEN-LAST:event_panelCentroKeyTyped

    private void tablaInsumosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaInsumosMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tablaInsumosMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

    }//GEN-LAST:event_btnEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JComboBox<String> comboReceta;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelCentro;
    private javax.swing.JPanel panelNorte;
    private javax.swing.JPanel panerlSur;
    private javax.swing.JTable tablaInsumos;
    // End of variables declaration//GEN-END:variables
}
