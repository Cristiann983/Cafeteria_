/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;

import entity.EnumStatus;
import entity.Factura;
import entity.Insumo;
import entity.Pedido;
import entity.Pedidoproducto;
import entity.Persistencia;
import entity.Producto;
import entity.Recetainsumo;
import entity.Venta;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jpaController.EnumStatusJpaController;
import jpaController.FacturaJpaController;
import jpaController.InsumoJpaController;
import jpaController.PedidoJpaController;
import jpaController.PedidoproductoJpaController;
import jpaController.ProductoJpaController;
import jpaController.RecetainsumoJpaController;
import jpaController.VentaJpaController;

/**
 *
 * @author juanm
 */
public class VistaFactura extends javax.swing.JPanel {
    private VentaJpaController jpaVenta;
    private Integer pedidoSeleccionado = null;
    private double totales;
    private final FacturaJpaController jpaFactura;
    private final ProductoJpaController jpaproducto;
    private final InsumoJpaController jpainsumo;
    private final PedidoJpaController jpapedido;
    private final RecetainsumoJpaController jparecetai;
    private final EnumStatusJpaController jpaestatus;
    private final PedidoproductoJpaController jpapedidop;

    /**
     * Creates new form Fractura
     */
    public VistaFactura() {
        initComponents();
        Persistencia persis = new Persistencia();
        EntityManagerFactory emf = persis.getEmf();

        jpaFactura = new FacturaJpaController(emf);
        jpaproducto = new ProductoJpaController(emf);
        jpainsumo = new InsumoJpaController(emf);
        jpapedido = new PedidoJpaController(emf);
        jparecetai = new RecetainsumoJpaController(emf);
        jpaestatus = new EnumStatusJpaController(emf);
        jpapedidop = new PedidoproductoJpaController(emf);
        jpaVenta=new VentaJpaController(emf);
    }

    public void setTotalAPagar(double total) {
        this.totales = total;
        lblPago.setText(String.format("$%.2f", total));
    }

    public void setIdPedido(int id) {
        this.pedidoSeleccionado = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblPago = new javax.swing.JLabel();
        lblCambio = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnFactura = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        txtPagaron = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Total A Pagar");

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jLabel3.setText("Pagaron:");

        jLabel4.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jLabel4.setText("Cambio:");

        lblPago.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        lblPago.setText("Total A Pagar:");

        lblCambio.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        lblCambio.setText("Total A Pagar:");

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnFactura.setText("Factura");
        btnFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacturaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jLabel7.setText("Total A Pagar:");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        txtPagaron.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPagaronKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPagaronKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnRegresar)
                        .addGap(50, 50, 50)
                        .addComponent(btnFactura)
                        .addGap(33, 33, 33)
                        .addComponent(btnAceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCambio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPagaron)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPago)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPagaron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblCambio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(btnFactura)
                    .addComponent(btnAceptar))
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void btnFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacturaActionPerformed
        if (pedidoSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "No hay pedido seleccionado.");
            return;
        }

        Pedido pedido = jpaFactura.getEntityManager().find(Pedido.class, pedidoSeleccionado);
        if (pedido == null) {
            JOptionPane.showMessageDialog(this, "No se encontr√≥ el pedido con ID: " + pedidoSeleccionado);
            return;
        }

        boolean existeFactura = false;
        List<Factura> facturas = jpaFactura.findFacturaEntities();
        for (int i = 0; i < facturas.size(); i++) {
            if (facturas.get(i).getIdPedido().getIdPedido() == pedidoSeleccionado) {
                existeFactura = true;
                break;
            }
        }
        List<Venta> ventas = jpaVenta.findVentaEntities();
        for (int i = 0; i < ventas.size(); i++) {
            if (ventas.get(i).getIdPedio().getIdPedido()== pedidoSeleccionado) {
                existeFactura = true;
                break;
            }
        }
        

        if (existeFactura) {
            JOptionPane.showMessageDialog(this, "Ya existe una factura para este pedido.");
            return;
        }

        try {
            actualizarStockYPedido();

            Factura nuevaFactura = new Factura();
            nuevaFactura.setFecha(new Date());
            nuevaFactura.setIdPedido(pedido);
            nuevaFactura.setMonto((long) totales);

            jpaFactura.create(nuevaFactura);
           
            Venta nuevaVenta = new Venta();
            nuevaVenta.setIdPedio(pedido);
            nuevaVenta.setTotal(BigDecimal.valueOf(totales));
            jpaVenta.create(nuevaVenta);
            java.awt.Window ventana = javax.swing.SwingUtilities.getWindowAncestor(this);
            if (ventana != null) {
                ventana.dispose();
            }
            JOptionPane.showMessageDialog(this, "Factura generada correctamente.");
        } catch (Exception e) {
            mostrarError("Error al guardar la factura", e);
        }

    }//GEN-LAST:event_btnFacturaActionPerformed

    private void txtPagaronKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagaronKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.' && !Character.isISOControl(c)) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Solo se permiten n√∫meros y punto decimal.");
        }
    }//GEN-LAST:event_txtPagaronKeyTyped

    private void txtPagaronKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagaronKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                double pagaron = Double.parseDouble(txtPagaron.getText());
                double cambio = pagaron - totales;

                if (cambio < 0) {
                    JOptionPane.showMessageDialog(this, "El monto ingresado es insuficiente.");
                    lblCambio.setText("Cambio: $0.00");
                } else {
                    lblCambio.setText(String.format("Cambio: $%.2f", cambio));
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese un n√∫mero v√°lido.");
            }
        }
    }//GEN-LAST:event_txtPagaronKeyPressed
    private void mostrarError(String mensaje, Exception e) {
        JOptionPane.showMessageDialog(null, mensaje + ": " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void actualizarStockYPedido() {
         if (pedidoSeleccionado == null) {
            mostrarError("No hay pedido seleccionado.", new IllegalStateException());
            return;
        }
        try {

            List<Pedidoproducto> productosDelPedido = new ArrayList<>();

            for (Pedidoproducto pp : jpapedidop.findPedidoproductoEntities()) {
                if (pp.getIdPedido().getIdPedido() == pedidoSeleccionado) {
                    productosDelPedido.add(pp);
                }
            }

            for (Pedidoproducto pp : productosDelPedido) {
                Producto producto = pp.getIdProducto();
                int cantidadProducto = pp.getCantidad();

                for (Recetainsumo ri : jparecetai.findRecetainsumoEntities()) {
                    if (ri.getReceta().getIdReceta() == producto.getIdProducto()) {
                        Insumo insumo = ri.getInsumo();
                        double cantidadNecesaria = cantidadProducto * ri.getCantidad();
                        double nuevaCantidad = insumo.getCantidad() - cantidadNecesaria;
                        insumo.setCantidad((int) nuevaCantidad);
                        jpainsumo.edit(insumo);
                    }
                }
            }

            Pedido pedido = productosDelPedido.get(0).getIdPedido();
            EnumStatus status = jpaestatus.findEnumStatus(3);
            pedido.setIdStatus(status);
            jpapedido.edit(pedido);
            Venta nuevaVenta = new Venta();
            nuevaVenta.setIdPedio(pedido);
            nuevaVenta.setTotal(BigDecimal.valueOf(totales));
            jpaVenta.create(nuevaVenta);
            JOptionPane.showMessageDialog(null, "Pedido finalizado y stock actualizado correctamente.");

        } catch (Exception e) {
            mostrarError("Error al finalizar el pedido", e);
        }

    }
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        actualizarStockYPedido();
        java.awt.Window ventana = javax.swing.SwingUtilities.getWindowAncestor(this);
        if (ventana != null) {
            ventana.dispose();
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        java.awt.Window ventana = javax.swing.SwingUtilities.getWindowAncestor(this);
        if (ventana != null) {
            ventana.dispose();
        }
    }//GEN-LAST:event_btnRegresarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnFactura;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblCambio;
    private javax.swing.JLabel lblPago;
    private javax.swing.JTextField txtPagaron;
    // End of variables declaration//GEN-END:variables
}
